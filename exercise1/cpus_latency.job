#!/bin/bash

# Name of the job
#SBATCH --job-name=my_first_job

# Define the number of nodes you need.
#SBATCH --nodes=2

# Define how long the job will run in real time. Format is d-hh:mm:ss
# For a 30 seconds job
#SBATCH --time=0-02:00:00

## Define the account name, e.g. for the Laboratory of Data Engineering
#SBATCH -A dssc

# Define the partition on which the job shall run, e.g. EPYC, THIN, GPU, DGX
#SBATCH -p EPYC

# Specify the mpirun command for a dual-socket, 64-core EPYC system across 2 nodes
distance_1="/opt/programs/openMPI/4.1.5/bin/mpirun -np 64 --map-by ppr:32:node --bind-to core --cpu-list 0,"

# Specify the mpirun command
# distance_1="/opt/programs/openMPI/4.1.5/bin/mpirun -np 2 --map-by core --bind-to core --cpu-list 0,"

# Specify the OSU Micro-Benchmarks binary
osu_bcast_binary="./osu-micro-benchmarks-7.3/c/mpi/pt2pt/standard/osu_latency"


# Specify the output text file
output_file="cpu_latency.txt"

# Loop through different input
# Loop through different inputs
for input in {1..255}
do
    echo "CPUS:0 and $input" >> $output_file
    echo " " >> $output_file
    # Execute the mpirun command with the specified input
    output=$( $distance_1$input $osu_bcast_binary -x 100 -i 1000 -m 2:2)

    # Append the output to the text file
    echo "$output" >> $output_file

    # Add a separator line for better readability
    echo "====================" >> $output_file
done










